                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.5 #9498 (CYGWIN)
                              4 ;--------------------------------------------------------
                              5 	.module util
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _checkKeys
                             12 	.globl _cpct_isAnyKeyPressed
                             13 	.globl _cpct_isKeyPressed
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ; ram data
                             19 ;--------------------------------------------------------
                             20 	.area _DATA
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _INITIALIZED
                             25 ;--------------------------------------------------------
                             26 ; absolute external ram data
                             27 ;--------------------------------------------------------
                             28 	.area _DABS (ABS)
                             29 ;--------------------------------------------------------
                             30 ; global & static initialisations
                             31 ;--------------------------------------------------------
                             32 	.area _HOME
                             33 	.area _GSINIT
                             34 	.area _GSFINAL
                             35 	.area _GSINIT
                             36 ;--------------------------------------------------------
                             37 ; Home
                             38 ;--------------------------------------------------------
                             39 	.area _HOME
                             40 	.area _HOME
                             41 ;--------------------------------------------------------
                             42 ; code
                             43 ;--------------------------------------------------------
                             44 	.area _CODE
                             45 ;src/util.c:4: u8 checkKeys(const cpct_keyID* k, u8 numk) {
                             46 ;	---------------------------------
                             47 ; Function checkKeys
                             48 ; ---------------------------------
   4000                      49 _checkKeys::
   4000 DD E5         [15]   50 	push	ix
   4002 DD 21 00 00   [14]   51 	ld	ix,#0
   4006 DD 39         [15]   52 	add	ix,sp
                             53 ;src/util.c:7: if (cpct_isAnyKeyPressed()) {
   4008 CD 47 41      [17]   54 	call	_cpct_isAnyKeyPressed
   400B 7D            [ 4]   55 	ld	a,l
   400C B7            [ 4]   56 	or	a, a
   400D 28 29         [12]   57 	jr	Z,00105$
                             58 ;src/util.c:8: for(i=1; i <= numk; i++, k++) {
   400F 01 01 01      [10]   59 	ld	bc,#0x0101
   4012 DD 5E 04      [19]   60 	ld	e,4 (ix)
   4015 DD 56 05      [19]   61 	ld	d,5 (ix)
   4018                      62 00107$:
   4018 DD 7E 06      [19]   63 	ld	a,6 (ix)
   401B 90            [ 4]   64 	sub	a, b
   401C 38 1A         [12]   65 	jr	C,00105$
                             66 ;src/util.c:9: if (cpct_isKeyPressed(*k))
   401E 6B            [ 4]   67 	ld	l, e
   401F 62            [ 4]   68 	ld	h, d
   4020 7E            [ 7]   69 	ld	a, (hl)
   4021 23            [ 6]   70 	inc	hl
   4022 66            [ 7]   71 	ld	h,(hl)
   4023 6F            [ 4]   72 	ld	l,a
   4024 C5            [11]   73 	push	bc
   4025 D5            [11]   74 	push	de
   4026 CD 88 40      [17]   75 	call	_cpct_isKeyPressed
   4029 D1            [10]   76 	pop	de
   402A C1            [10]   77 	pop	bc
   402B 7D            [ 4]   78 	ld	a,l
   402C B7            [ 4]   79 	or	a, a
   402D 28 03         [12]   80 	jr	Z,00108$
                             81 ;src/util.c:10: return i;
   402F 69            [ 4]   82 	ld	l,c
   4030 18 08         [12]   83 	jr	00109$
   4032                      84 00108$:
                             85 ;src/util.c:8: for(i=1; i <= numk; i++, k++) {
   4032 04            [ 4]   86 	inc	b
   4033 48            [ 4]   87 	ld	c,b
   4034 13            [ 6]   88 	inc	de
   4035 13            [ 6]   89 	inc	de
   4036 18 E0         [12]   90 	jr	00107$
   4038                      91 00105$:
                             92 ;src/util.c:13: return 0;
   4038 2E 00         [ 7]   93 	ld	l,#0x00
   403A                      94 00109$:
   403A DD E1         [14]   95 	pop	ix
   403C C9            [10]   96 	ret
                             97 	.area _CODE
                             98 	.area _INITIALIZER
                             99 	.area _CABS (ABS)
